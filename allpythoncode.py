# print((5 + 4) * 10 / 2)

# print(((5 + 4) * 10) / 2)

# print((5 + 4) * (10 / 2))

# print(5 + (4 * 10) / 2)

# print(5 + 4 * 10 // 2)
# weather="It's "kind of" sunny"
# print(weather)
# weather="It's \"kind of\" sunny"
# print(weather)

# name="Jhonny"
# age=55
# print("Hi "+name+". You are "+str(age)+" years old.")
# print(f"Hi {name}. You are {age} years old.")

# birth_year=int(input("What year were you born?:"))
# current_year=int(2024)
# age=current_year-birth_year
# print("Your age is:",age)
# print(f"Your age is: {age}.")

# user_name=input("Enter your username:")
# user_pass=input("Enter your password:")
# secret_convert=len(user_pass)*'*'
# print(f"Hey {user_name}, password \"{secret_convert}\" is \"{len(user_pass)}\" long." )

# new_list = ['a', 'b', 'c']
# print(new_list[1]) #My output:b #What I got:b
# print(new_list[-2]) #My output:b #What I got:b
# print(new_list[1:3]) #My output:['b', 'c'] #What I got: ['b', 'c']
# new_list[0] = 'z'
# print(new_list) #My output:['z','b','c'] #What I got: ['z','b','c']

# my_list = [1,2,3]
# bonus = my_list + [5]
# my_list[0] = 'z'
# print(my_list) #My output:['z','2','3'] #What I got: ['z','2','3']
# print(bonus) #My output:['1','2','3','5'] #What I got: ['1','2','3','5']

# using this list: 
# basket = ["Banana", ["Apples", ["Oranges"], "Blueberries"]]
# access "Oranges" and print it:
# You will find the answer if you scroll down to the bottom, but attempt it yourself first!
# Laymen way
# a=basket[1]
# print(a)
# b=a[1]
# print(b)
# c=b[0]
# print(c)

# More efficient way
# d=basket[1][1][0]
# print(d)

# Exercise List Methods
# SCROLL FOR ANSWERS!
# using this list,
basket = ["Banana", "Apples", "Oranges", "Blueberries"]

# 1. Remove the Banana from the list
# basket.pop(0)
# print(basket)

# 2. Remove "Blueberries" from the list.
# basket.pop() # OR basket.pop(3)
# print(basket)

# 3. Put "Kiwi" at the end of the list.
# basket.append("Kiwi")
# print(basket)

# 4. Add "Apples" at the beginning of the list
# basket.insert(0,"Apples")
# print(basket)

# 5. Count how many apples in the basket
# print(basket.count("Apples"))

# 6. empty the basket
# basket.clear()
# print(basket)

# 7. First remove the apple and then place the apple at the starting
# basket.pop(1)
# basket.insert(0, "Apples")
# print(basket)

#fix this code so that it prints a sorted list of all of our friends (alphabetical). Scroll to see answer
# friends = ['Simon', 'Patty', 'Joy', 'Carrie', 'Amira', 'Chu']

# new_friend = ['Stanley']
# sort_friends=friends+new_friend
# sort_friends.sort()
# print(sort_friends)

# Exercise Dictionary Methods
# Scroll to see answers.

# 1 Create a user profile for your new game.
# This user profile will be stored in a dictionary with keys: 'age', 'username', 'weapons', 'is_active' and 'clan'
# age=int(input("Enter your age:"))
# username=input("Enter your username:")
# weapons=input("Do you have any weapons:")
# is_active=input("Are you an active player:")
# clan=input("What is your clan name:")
# user_profile={"age":age,"username":username,"weapons":weapons,"is_active":is_active,"Clan":clan}
# print(user_profile)

# 2 iterate and print all the keys in the above user.
# user_profile={'age': 20, 'username': 'ashutosht05', 'weapons': 'No', 'is_active': 'Yes', 'Clan': 'Tiku'}
# print(user_profile.keys())

# 3 Add a new weapon to your user
# user_profile.update({"weapons":"Desert Eagle"})
# print(user_profile)

# 4 Add a new key to include 'is_banned'. Set it to false
# user_profile.update({"is_banned":False})
# print(user_profile)

# 5 Ban the user by setting the previous key to True
# user_profile.update({"is_banned":True})
# print(user_profile)

# 6 create a new user2 my copying the previous user and update the age value and username value.
# user2=user_profile.copy()
# user2.update({"age":25,"username":"Ashukt05"})
# print(user_profile)
# print(user2)


# my_set={1,2,3,4,5}
# your_set={4,5,6,7,8,9,10}
# print(my_set.isdisjoint(your_set))

#Scroll to bottom to see solution
# You are working for the school Principal. We have a database of school students:
# school = {'Bobby','Tammy','Jammy','Sally','Danny'}

#during class, the teachers take attendance and compile it into a list. 
# attendance_list = ['Jammy', 'Bobby', 'Danny', 'Sally']

#using what you learned about sets, create a piece of code that the school principal can use to immediately find out who missed class so they can call the parents. (Imagine if the list had 1000s of students. The principal can use the lists generated by the teachers + the school database to use python and make his/her job easier): Find the students that miss class!
# attendance_set=set(attendance_list)
# school.difference_update(attendance_set)
# print(school)

# print(school.difference(attendance_list))

# is_magician=False
# is_expert=True

#check is magician AND expert: "Yor are a master magician"
# if is_magician and is_expert:
#     print("You are a master magician")

# Check if magician but not expert: "at least you're getting there"
# elif (is_magician==True) and (is_expert==False):
#     print("At least you're getting there")
# OR
# elif is_magician or is_expert:
#     print("You are a master magician")

# if you're not a magician: "You need magic powers"
# elif (is_magician==False) and is_expert:
#     print("You need magic powers")
# OR
# elif not is_magician:
#     print("You need magic powers")
# else:
#     print("What are you doing here?")

#counter
# my_list=[1,2,3,4,5,6,7,8,9,10]
# count=0
# for i in my_list:
#     count+=i
# print("The sum of the list items is:",count)


# for i,char in enumerate(list(range(100))):
#     if char==50:
#         print("The index value of 50 is:",i)

# i=0
# while i<50:
#     print(i)
#     i+=1

#exercise
# Display the image  below to the right hand side where the 0 is going to be " " and the 1 is goint to be "*". This will reveal an image:
picture=[
    [0,0,0,1,0,0,0],
    [0,0,1,1,1,0,0],
    [0,1,1,1,1,1,0],
    [1,1,1,1,1,1,1],
    [0,0,0,1,0,0,0],
    [0,0,0,1,0,0,0]
]
# My Way
# k=[]
# for i in picture:
#     for item in i:
#         if item==0:
#             k.append(" ")
#         elif item==1:
#             k.append('*')
# image=""
# print(image.join(k))

# Course way
# for row in picture:
#     for pixel in row:
#         if pixel:
#             print("*",end="")
#         else:
#             print(" ",end="")
#     print(" ")

# Excerise: Check for duplicates in list:
# some_list=['a','b','c','b','d','m','n','n']
# new_list=[]
# for i in some_list:
#     if some_list.count(i)>1:
#         if i not in new_list:
#             new_list.append(i)
# else:
#     print("No duplicates found")
# print(new_list)

# def sum(num1, num2):
#     def another_func(n1,n2):
#         return n1+n2
#     return another_func(num1,num2)
# total=sum(10,20)
# print(total)

# def checkDriverAge(age=0):
    # age=input("What is your age:")
#     if int(age)<18:
#         print("Sorry, you are too young to drive this car. Powering Off!")
#     elif int(age)>18:
#         print("Powering On. Enjoy the ride!")
#     elif int(age)==18:
#         print("Congratulations on your first year of driving. Enjoy the ride!")
# checkDriverAge(92)    
# Wrap theabove code in a function called checkDriverAge(). Whenever you call this function, you will get prompted for age.
# Notice the benefit in having checkDriverAge() function accept an argument of age, so that if you enter:
# checkDriverAge(92):
# it returns "Powering On. Enjoy the ride!"
# also make it so that the default age is set to 0 if no argument is given.

# DOCSTRNG
# def test(a):
#     '''Info: This does nothing'''
#     print(a)
# test("!!!")
# help(test)
# print(test.__doc__)

# *args
# def super_func(*args):
#     # print(args)
#     return sum(args)
# print(super_func(1,2,3,4,5))

# **kwargs
# def super_func(*args,**kwargs):
    # print(args)
#     print(kwargs)
#     total=0
#     for i in kwargs.values():
#         total+=i
#     return sum(args)+total
# print(super_func(1,2,3,4,5, num=1, num2=3))

# Exercise
# def highest_even(li):
#     even_list=[]
#     for item in li:
#         if item % 2==0:
#             even_list.append(item)
#     highest_num=even_list[0]
#     for i in even_list:
#         if i>highest_num:
#             highest_num=i
#     print(highest_num)
#     # return max(even_list)
                
# highest_even([1,2,3,4,5,6,7,8,9,10,11])


# List compreshension
# my_list3=[num**2 for num in range(0,100)]
# print(my_list3)
# my_list4=[num**2 for num in range(0,100) if num%2==0]
# print(my_list4)

# some_list=['a','b','c','b','d','m','n','n']
# duplicates=list(set([value for value in some_list if some_list.count(value)>1]))
# for value in some_list:
#     if some_list.count(value)>1:
# if value not in duplicates:
    # duplicates.append(value)
# print(duplicates)

# a="   ashutosh  "
# a.strip('')

# print(len(a))
